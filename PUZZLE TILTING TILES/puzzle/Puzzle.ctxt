#BlueJ class context
comment0.target=Puzzle
comment0.text=\r\n\ Un\ puzzle\ que\ simula\ el\ problema\ de\ Tilting\ Tiles\r\n\r\n\ @author\ \ Santiago\ Carmona,\ Sergio\ Idarraga\r\n\ @version\ 1.0\ \ (28\ Octubre\ 2024)()\r\n
comment1.params=h\ w
comment1.target=Puzzle(int,\ int)
comment1.text=\r\n\ Crea\ un\ nuevo\ Puzzle\ generando\ los\ tableros\ de\ forma\ aleatoria\ e\ indicado\ solo\ las\ dimensiones.\r\n
comment10.params=color
comment10.target=java.lang.String\ calculateColor(char)
comment11.params=color
comment11.target=char\ getCharColor(java.lang.String)
comment12.params=rows\ columns
comment12.target=char[][]\ createMatrix(int,\ int)
comment13.params=
comment13.target=void\ makeVisible()
comment13.text=\r\n\ Permite\ hacer\ visible\ los\ puzzles\r\n
comment14.params=
comment14.target=void\ makeInvisible()
comment14.text=\r\n\ Permite\ hacer\ invisible\ los\ puzzles\r\n
comment15.params=row\ column\ color
comment15.target=void\ addTile(int,\ int,\ char)
comment15.text=\r\n\ A\u00F1ade\ una\ nueva\ baldosa\ al\ tablero\r\n
comment16.params=type\ row\ column
comment16.target=void\ addTile(java.lang.String,\ int,\ int)
comment17.params=tile\ row\ column
comment17.target=void\ buildNewTile(shapes.Tile,\ int,\ int)
comment18.params=type\ row\ column
comment18.target=shapes.Tile\ instanceTile(java.lang.String,\ int,\ int)
comment19.params=row\ column
comment19.target=void\ deleteTile(int,\ int)
comment19.text=\r\n\ Elimina\ una\ baldosa\ del\ puzzle\r\n
comment2.params=starting\ ending
comment2.target=Puzzle(char[][],\ char[][])
comment2.text=\r\n\ Crea\ un\ nuevo\ Puzzle\ indicado\ el\ tablero\ inicial\ y\ final\r\n
comment20.params=typeOfGlue\ from\ to\ tablero
comment20.target=void\ relocateTile(java.lang.String,\ int[],\ int[],\ shapes.Tile[][])
comment20.text=\r\n\ Mueve\ de\ lugar\ una\ baldosa\ indicada\ por\ teclado\r\n
comment21.params=tablero\ starting
comment21.target=void\ updateStartingMatrix(shapes.Tile[][],\ char[][])
comment22.params=from\ to
comment22.target=void\ relocateTile(int[],\ int[])
comment23.params=direction
comment23.target=void\ tilt(char)
comment23.text=\r\n\ Gira\ el\ tablero\ en\ la\ direcci\u00F3n\ indicada\ por\ teclado\r\n
comment24.params=
comment24.target=int[]\ searchRoot()
comment25.params=row\ column
comment25.target=java.lang.String\ typeOfGlue(int,\ int)
comment26.params=Array
comment26.target=int\ min(java.util.ArrayList)
comment27.params=direction
comment27.target=void\ tiltEnding(char)
comment28.params=baldosa\ row\ direction\ firstTime
comment28.target=int\ calculateMoves(shapes.Tile,\ shapes.Tile[],\ char,\ boolean)
comment28.text=\ Calcula\ los\ movimientos\ hacia\ la\ derecha\ e\ izquierda\r\n\r\n\ @param\ baldosa,\ la\ baldosa\ a\ la\ cual\ quiero\ calcular\ el\ n\u00FAmero\ de\ movimientos\r\n\ @param\ row,\ la\ fila\ d\u00F3nde\ se\ encuentra\ esa\ baldosa\r\n\ @param\ direction,\ direcci\u00F3n\ hacia\ la\ cual\ quiero\ calcular\ el\ n\u00FAmero\ de\ movimientos\r\n\ @return\ int\ moves,\ la\ cantidad\ de\ movimientos\ posibles\ para\ esa\ baldosa\r\n
comment29.params=tablero\ baldosa\ row\ direction\ firstTime
comment29.target=int\ calculateMovesUpAndDown(shapes.Tile[][],\ shapes.Tile,\ shapes.Tile[],\ char,\ boolean)
comment29.text=\r\n\ Calcula\ los\ movimientos\ hacia\ arriba\ y\ abajo\r\n\ @param\ tablero\ El\ tablero\ que\ referencia\ a\ starting\r\n\ @param\ baldosa\ La\ baldosa\ la\ cual\ se\ quiere\ calcular\ el\ n\u00FAmero\ de\ movimientos\r\n\ @param\ row\ La\ fila\ d\u00F3nde\ se\ encuntra\ dicha\ baldosa\r\n\ @param\ direction\ La\ direcci\u00F3n\ hacia\ la\ cual\ se\ calcula\ el\ n\u00FAmero\ de\ movimientos\r\n\ @return\r\n
comment3.params=ending
comment3.target=Puzzle(char[][])
comment3.text=\r\n\ Crea\ un\ nuevo\ Puzzle\ indicado\ solamente\ el\ tablero\ final\r\n
comment30.params=baldosa
comment30.target=int[]\ index(shapes.Tile)
comment31.params=r\ c\ direction
comment31.target=int\ calculateMovesGlued(int,\ int,\ char)
comment32.params=baldosa\ r\ c\ direction
comment32.target=int\ calculateMovesGluedUpAndDown(shapes.Tile,\ int,\ int,\ char)
comment33.params=r\ c\ direction
comment33.target=int\ minMoves(int,\ int,\ char)
comment34.params=movesGlued\ tablero
comment34.target=void\ moveRight(int,\ shapes.Tile[][])
comment35.params=movesGlued\ tablero
comment35.target=void\ moveLeft(int,\ shapes.Tile[][])
comment36.params=movesGlued\ tablero
comment36.target=void\ moveUp(int,\ shapes.Tile[][])
comment37.params=movesGlued\ tablero
comment37.target=void\ moveDown(int,\ shapes.Tile[][])
comment38.params=
comment38.target=boolean\ isGoal()
comment38.text=\r\n\ Retorna\ si\ el\ tablero\ inicial\ es\ igual\ al\ tablero\ final\r\n
comment39.params=matriz
comment39.target=void\ print(char[][])
comment4.params=tablero\ baldosas
comment4.target=void\ push(char[][],\ shapes.Tile[][])
comment40.params=
comment40.target=char[][]\ actualArrangement()
comment40.text=\r\n\ Imprime\ el\ estado\ actual\ del\ tablero\ en\ formato\ matriz\r\n
comment41.params=row\ column
comment41.target=void\ addGlue(int,\ int)
comment42.params=type\ row\ column
comment42.target=void\ addGlue(java.lang.String,\ int,\ int)
comment43.params=row\ column
comment43.target=shapes.Circle\ addCircle(int,\ int)
comment44.params=
comment44.target=shapes.Tile[][]\ copyStarting()
comment45.params=
comment45.target=void\ exchange()
comment45.text=\r\n\ Permite\ intercambiar\ de\ posiciones\ los\ tableros\ starting\ y\ ending\r\n
comment46.params=row\ column
comment46.target=void\ makeHole(int,\ int)
comment46.text=\r\n\ Realiza\ un\ hueco\ donde\ las\ fichas\ se\ caen\ y\ desaparecen\ en\ la\ posici\u00F3n\ dada\r\n\ @param\ row\ fila\ donde\ ir\u00E1\ el\ hueco\r\n\ @param\ column\ columna\ donde\ ir\u00E1\ el\ hueco\r\n
comment47.params=row\ column
comment47.target=void\ deleteGlue(int,\ int)
comment47.text=\r\n\ Se\ encarga\ de\ eliminar\ el\ pegante\ que\ est\u00E9\ en\ la\ posici\u00F3n\ dada\r\n\ @param\ row\ indica\ la\ fila\ donde\ est\u00E1\ el\ pegante\r\n\ @param\ column\ indica\ la\ columna\ donde\ est\u00E1\ el\ pegante\r\n
comment48.params=
comment48.target=void\ misplacedTiles()
comment48.text=\r\n\ Encuentra\ cuantas\ fichas\ estan\ en\ su\ posici\u00F3n\ correcta\ en\ el\ tablero\r\n
comment49.params=
comment49.target=void\ finish()
comment49.text=\r\n\ Finaliza\ la\ ejecuci\u00F3n\ del\ programa\ y\ no\ se\ puede\ hacer\ ning\u00FAn\ otro\ movimiento.\r\n
comment5.params=
comment5.target=void\ endingPush()
comment6.params=
comment6.target=void\ relocateEnding()
comment7.params=
comment7.target=void\ moveEnding()
comment8.params=
comment8.target=char[][]\ getStarting()
comment9.params=
comment9.target=char[][]\ getEnding()
numComments=50
